CREATE TABLE USUARIO(
    CPF CHAR(14) NOT NULL,
    RG CHAR(12),
    NOME VARCHAR(30) NOT NULL,
    EMAIL VARCHAR(45) NOT NULL,
    SENHA VARCHAR(20) NOT NULL,
    
    CONSTRAINT PK_USUARIO PRIMARY KEY (CPF),
    CONSTRAINT CK_CPF check(regexp_like(CPF, '[0-9]{3}\.[0-9]{3}\.[0-9]{3}\-[0-9]{2}')),
    CONSTRAINT CK_RG check(regexp_like(RG, '[0-9]{2}\.[0-9]{3}\.[0-9]{3}\-[0-9]{1}'))
);

CREATE TABLE TIPO_USUARIO(
    CPF_USUARIO CHAR (14) NOT NULL,
    TIPO CHAR(1),
    
    CONSTRAINT PK_TIPO_USUARIO PRIMARY KEY (CPF_USUARIO,TIPO),
    CONSTRAINT FK_TIPO_USUARIO FOREIGN KEY (CPF_USUARIO) REFERENCES USUARIO(CPF) ON DELETE CASCADE,
    CONSTRAINT CK_TIPO CHECK (UPPER(TIPO) IN ('A','F','O')) 
);

CREATE TABLE PRODUTO(
	id MEDIUMINT NOT NULL AUTO_INCREMENT,
    NOME VARCHAR(30) NOT NULL,
    DESCRICAO VARCHAR(45),
    LUCRO_ESPERADO FLOAT,
    QNTD_ESTOQUE INTEGER,    
    CONSTRAINT PK_PRODUTO PRIMARY KEY (COD_PRODUTO)
);

CREATE SEQUENCE COD_PRODUTO START WITH 1 INCREMENT BY 1;

 CREATE OR REPLACE TRIGGER GERA_COD_PRODUTO 
    BEFORE INSERT ON PRODUTO
    FOR EACH ROW
    BEGIN
        select COD_PRODUTO.nextval INTO :NEW.COD_PRODUTO FROM dual;
    END;


CREATE TABLE REPOSICAO(
    N_PEDIDO INTEGER NOT NULL,
    COD_PRODUTO INTEGER,
    P_COMPRA FLOAT NOT NULL,
    P_VENDA FLOAT NOT NULL,
    QNTD_REPOSICAO INTEGER NOT NULL,
    DATA_REPOSICAO DATE NOT NULL,
	QNTD_DISPONIVEL INTEGER NOT NULL,
    
    CONSTRAINT PK_REPOSICAO PRIMARY KEY (N_PEDIDO,COD_PRODUTO),
    CONSTRAINT FK_REPOSICAO FOREIGN KEY(COD_PRODUTO) REFERENCES PRODUTO(COD_PRODUTO) ON DELETE SET NULL 
);


CREATE SEQUENCE N_PEDIDO START WITH 1 INCREMENT BY 1;

 CREATE OR REPLACE TRIGGER GERA_N_PEDIDO 
    BEFORE INSERT ON REPOSICAO
    FOR EACH ROW
    BEGIN
        select N_PEDIDO.nextval INTO :NEW.N_PEDIDO FROM dual;
    END
 ;
 
 
 CREATE TABLE VENDA(
    COD_VENDA INTEGER NOT NULL,
    CPF_USUARIO CHAR (14) NOT NULL,
    DATA_VENDA DATE NOT NULL,
    DESCONTO FLOAT NOT NULL,
    CUSTO_TOTAL FLOAT NOT NULL,
    PRECO_VENDA FLOAT NOT NULL,
    LUCRO FLOAT NOT NULL,
    T_PAGAMENTO CHAR (1),
    
    CONSTRAINT PK_VENDA PRIMARY KEY (COD_VENDA),
    CONSTRAINT FK_VENDA FOREIGN KEY (CPF_USUARIO) REFERENCES USUARIO(CPF),
    CONSTRAINT CK_T_PAGAMENTO CHECK (UPPER(T_PAGAMENTO) IN ('D','C'))
 
);

CREATE SEQUENCE COD_VENDA START WITH 1 INCREMENT BY 1;

 CREATE OR REPLACE TRIGGER GERA_COD_VENDA 
    BEFORE INSERT ON VENDA
    FOR EACH ROW
    BEGIN
        select COD_VENDA.nextval INTO :NEW.COD_VENDA FROM dual;
    END
 ;


 CREATE TABLE ITENS_VENDA(
    COD_VENDA INTEGER NOT NULL,
    COD_PRODUTO INTEGER NOT NULL,
    QNTD_PRODUTO INTEGER NOT NULL,
    PRECO_REPOSICAO NUMERIC NOT NULL,
    PRECO_VENDA NUMERIC NOT NULL,
    LUCRO NUMERIC NOT NULL,
    
    CONSTRAINT PK_ITENS_VENDA PRIMARY KEY (COD_VENDA,COD_PRODUTO),
    CONSTRAINT FK_ITENS_VENDA1 FOREIGN KEY (COD_VENDA) REFERENCES VENDA(COD_VENDA) ON DELETE CASCADE,
    CONSTRAINT FK_ITENS_VENDA2 FOREIGN KEY (COD_PRODUTO) REFERENCES PRODUTO(COD_PRODUTO)
 );


 CREATE TABLE P_DINHEIRO(
    COD_VENDA INTEGER NOT NULL,
    VALOR FLOAT NOT NULL,
    
    CONSTRAINT PK_P_DINHEIRO PRIMARY KEY (COD_VENDA),
    CONSTRAINT FK_P_DINHEIRO FOREIGN KEY (COD_VENDA) REFERENCES VENDA(COD_VENDA) ON DELETE CASCADE
 );

 CREATE TABLE P_CARTAOC(
    COD_VENDA INTEGER NOT NULL,
    TAXA NUMERIC NOT NULL,
    PARCELAS INTEGER NOT NULL,
    VALOR FLOAT NOT NULL,
    
    CONSTRAINT PK_P_CARTAOC PRIMARY KEY (COD_VENDA),
    CONSTRAINT FK_P_CARTAOC FOREIGN KEY (COD_VENDA) REFERENCES VENDA(COD_VENDA) ON DELETE CASCADE
 );
 
  CREATE TABLE P_CARTAOD(
    COD_VENDA INTEGER NOT NULL,
    TAXA NUMERIC NOT NULL,
    VALOR FLOAT NOT NULL,
    
    CONSTRAINT PK_P_CARTAOD PRIMARY KEY (COD_VENDA),
    CONSTRAINT FK_P_CARTAOD FOREIGN KEY (COD_VENDA) REFERENCES VENDA(COD_VENDA) ON DELETE CASCADE
 );
 
/*SELECT 'DROP TABLE '|| TABLE_NAME || ' CASCADE CONSTRAINTS;' FROM USER_TABLES;*/


